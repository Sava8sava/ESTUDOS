https://saucelabs.com/resources/blog/print-page-pdf

@Test

public void printPageWithFirefox() throws IOException {

	String userName = System.getenv("SAUCE_USERNAME");

	String accessKey = System.getenv("SAUCE_ACCESS_KEY");

	URL gridUrl = new URL("https://ondemand.us-west-1.saucelabs.com:443/wd/hub");

	FirefoxOptions firefoxOptions = new FirefoxOptions();

	firefoxOptions.setCapability("platformName", "Windows 10");

	firefoxOptions.setCapability("browserVersion", "beta");


        Map<String, Object> sauceOptions = new HashMap<>();

	sauceOptions.put("name", "printPageWithFirefox");

	sauceOptions.put("username", userName);

	sauceOptions.put("accessKey", accessKey);

	sauceOptions.put("geckodriverVersion", "0.30.0");

	firefoxOptions.setCapability("sauce:options", sauceOptions);


        RemoteWebDriver driver = new RemoteWebDriver(gridUrl, firefoxOptions);

	Path printPage = Paths.get("src/test/screenshots/PrintPageFirefox.pdf");


        driver.get("https://www.saucedemo.com/v1/inventory.html");

	Pdf print = driver.print(new PrintOptions());

	Files.write(printPage, OutputType.BYTES.convertFromBase64Png(print.getContent()));

	driver.quit();

}
eu={voce sabe que faz esse codigo?
Copilo}t

Absolutely! This code is for a test method in Java that uses Selenium WebDriver with Sauce Labs to automate a browser task.

Here’s a quick breakdown:

    It sets up Firefox with specific capabilities like the platform and browser version.

    Connects to the Sauce Labs remote WebDriver.

    Navigates to a specified URL.

    Generates a PDF of the current page.

    Saves the PDF to a local file.

    Finally, quits the browser session.

It's pretty slick for automating browser interactions and capturing the state of web pages. Got any specific part you're curious about?
Você
isso podeb ser feito em python?
Copilot

Claro! Aqui vai uma versão em Python do código que você mencionou, usando a biblioteca Selenium:
python

from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from webdriver_manager.firefox import GeckoDriverManager
import base64

options = Options()
options.browser_version = "beta"
options.platform_name = "Windows 10"

sauce_options = {
    'name': 'printPageWithFirefox',
    'username': 'YOUR_SAUCE_USERNAME',
    'accessKey': 'YOUR_SAUCE_ACCESS_KEY',
    'geckodriverVersion': '0.30.0'
}

options.set_capability('sauce:options', sauce_options)

driver = webdriver.Remote(
    command_executor='https://ondemand.us-west-1.saucelabs.com:443/wd/hub',
    options=options
)

driver.get("https://www.saucedemo.com/v1/inventory.html")

pdf = driver.print_page()
pdf_content = base64.b64decode(pdf['value'])
with open("PrintPageFirefox.pdf", "wb") as f:
    f.write(pdf_content)

driver.quit()

Você precisará substituir YOUR_SAUCE_USERNAME e YOUR_SAUCE_ACCESS_KEY pelas suas credenciais do Sauce Labs. Isso deve fazer a mesma coisa, abrindo o Firefox e capturando a página como um PDF. O que acha?
